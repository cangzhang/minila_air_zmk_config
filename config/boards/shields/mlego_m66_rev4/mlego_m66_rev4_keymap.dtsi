/*
 * Copyright (c) 2022-2024 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
 
#define HOST_OS 1
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include "zmk-helpers/helper.h"
#include "romanian.dtsi"
#include "my_keys.dtsi"

#define  QW 0
#define RSE 1
#define LWR 2
#define ADJ 3

/ {

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LWR RSE>;
            then-layer = <ADJ>;
        };
    };

    behaviors {
        tlwr: tlwr {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo LWR>, <&tog LWR>, <&trans>;
        };

        trse: trse {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo RSE>, <&tog RSE>, <&trans>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qw_layer {
            bindings = <
                &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q
                &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q
                &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q
                &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q
                &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q &kp Q
            >;
        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
